<?xml version="1.0" encoding="utf-8" ?>
<!-- 
  Author: Nikhil Giridharan
  NetID: nxg220038
  Date: 9.22.2024
  Class: CS 4485.0W1
  Assignment: Time Tracking Desktop App (Part 2)

  This XAML file defines user interface for the time track reporting app for professors.
  The app allows the professor to select a class, view logged hours for each student,
  modify time entries and email students.
-->

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TPTMauiApp.MainPage"
             Title="Time Track Reporting">

    <VerticalStackLayout Padding="20" Spacing="10">

        <!-- 
          Dropdown for professor to select a class.
          ItemsSource is bound to a list of the professor's classes from  view model.
          SelectedItem is bound to the selected class to trigger class-specific logic.
          Binding to list of classes
          Binding to selected class
        -->
        <Label Text="Select a Class:" FontSize="Medium" />
        <Picker x:Name="classPicker" 
                Title="Choose Class"
                ItemsSource="{Binding ProfessorClasses}"
                SelectedItem="{Binding SelectedClass}" />

        <!-- 
          This section will display the logged hours for each student in the selected class.
        -->
        <Label Text="Time Tracking Overview" FontSize="Large" Margin="0,20,0,0"/>

        <!-- 
          CollectionView to display the time tracking data.
          ItemsSource is bound to a collection of students and their hours.
          Each student’s name and logged hours are displayed in a grid.
        -->
        <CollectionView x:Name="studentHoursGrid" 
                        ItemsSource="{Binding StudentsHours}">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <!-- 
                          Column 0: Student Name.
                          Column 1: Hours for Day 1.
                          Column 2: Hours for Day 2.
                          Column 3: Total hours for the week.
                        -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*" />  
                            <ColumnDefinition Width="*" />    
                            <ColumnDefinition Width="*" />   
                            <ColumnDefinition Width="*" />    
                        </Grid.ColumnDefinitions>

                        <!-- Display the student’s name in the first column, bound to student name -->
                        <Label Grid.Column="0" 
                               Text="{Binding StudentName}"
                               FontSize="Medium" />

                        <!-- Display hours logged for Day 1 in the second column, bound to hours for Day 1 -->
                        <Label Grid.Column="1" 
                               Text="{Binding Day1Hours}"
                               FontSize="Medium" />

                        <!-- Display hours logged for Day 2 in the third column, bound to hours for Day 2 -->
                        <Label Grid.Column="2" 
                               Text="{Binding Day2Hours}"
                               FontSize="Medium" />

                        <!-- Display total hours logged in the fourth column, bound to total hours -->
                        <Label Grid.Column="3" 
                               Text="{Binding TotalHours}"
                               FontSize="Medium" />
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- 
          Total time logged for the entire week for all students.
          Updated based on the data in the view model.
        -->
        <Label Text="Total Time Logged for Week:" FontSize="Medium" Margin="0,20,0,0" />
        <Label x:Name="totalHoursLabel" Text="{Binding TotalWeekHours}" FontSize="Medium" />

        <!-- 
          Allow professor to modify time entries for a student.
          Triggers the ModifyTimeCommand in the view model.
        -->
        <Button Text="Modify Time Entry" Command="{Binding ModifyTimeCommand}" />

        <!-- 
          Email students who have not logged time.
          Triggers the EmailStudentsCommand in the view model.
        -->
        <Button Text="Email Students" Command="{Binding EmailStudentsCommand}" />

    </VerticalStackLayout>
</ContentPage>
